##########################
# Black Monday
##########################

TRK_reduce_black_monday = {
	if = {
		limit = { has_dynamic_modifier = { modifier = TRK_black_monday_modifier } }
		### Consumer Goods Factories Factor ###
		# Set temp var TRK_black_monday_consumer_goods_change to influence it
		set_temp_variable = { TRK_black_monday_consumer_goods_after = TRK.TRK_black_monday_consumer_goods }
		add_to_temp_variable = { TRK_black_monday_consumer_goods_after = TRK_black_monday_consumer_goods_change?0 }
		clamp_temp_variable = { var = TRK_black_monday_consumer_goods_after min = 0 }
		set_temp_variable = { TRK_black_monday_consumer_goods_change_actual = TRK_black_monday_consumer_goods_after }
		subtract_from_temp_variable = { TRK_black_monday_consumer_goods_change_actual = TRK.TRK_black_monday_consumer_goods }

		### Construction Speed ###
		# Set temp var TRK_black_monday_construction_speed_change to influence it
		set_temp_variable = { TRK_black_monday_construction_speed_after = TRK.TRK_black_monday_construction_speed }
		add_to_temp_variable = { TRK_black_monday_construction_speed_after = TRK_black_monday_construction_speed_change?0 }
		clamp_temp_variable = { var = TRK_black_monday_construction_speed_after max = 0 }
		set_temp_variable = { TRK_black_monday_construction_speed_change_actual = TRK_black_monday_construction_speed_after }
		subtract_from_temp_variable = { TRK_black_monday_construction_speed_change_actual = TRK.TRK_black_monday_construction_speed }

		### Factory Output ###
		# Set temp var TRK_black_monday_factory_output_change to influence it
		set_temp_variable = { TRK_black_monday_factory_output_after = TRK.TRK_black_monday_factory_output }
		add_to_temp_variable = { TRK_black_monday_factory_output_after = TRK_black_monday_factory_output_change?0 }
		clamp_temp_variable = { var = TRK_black_monday_factory_output_after max = 0 }
		set_temp_variable = { TRK_black_monday_factory_output_change_actual = TRK_black_monday_factory_output_after }
		subtract_from_temp_variable = { TRK_black_monday_factory_output_change_actual = TRK.TRK_black_monday_factory_output }

		if = {
			limit = {
				check_variable = { TRK_black_monday_consumer_goods_after = 0 }
				check_variable = { TRK_black_monday_construction_speed_after = 0 }
				check_variable = { TRK_black_monday_factory_output_after = 0 }
			}
			remove_dynamic_modifier = { modifier = TRK_black_monday_modifier }
			clear_variable = TRK.TRK_black_monday_consumer_goods
			clear_variable = TRK.TRK_black_monday_construction_speed
			clear_variable = TRK.TRK_black_monday_factory_output
		}
		else_if = {
			limit = {
				NOT = {
					AND = {
						check_variable = { TRK_black_monday_consumer_goods_change_actual = 0 }
						check_variable = { TRK_black_monday_construction_speed_change_actual = 0 }
						check_variable = { TRK_black_monday_factory_output_change_actual = 0 }
					}
				}
			}
			custom_effect_tooltip = {
				localization_key = tooltip_modify_dynmod
				DYNMOD = TRK_black_monday_modifier
			}
			if = {
				limit = { NOT = { check_variable = { TRK_black_monday_consumer_goods_change_actual = 0 } } }
				add_to_variable = { TRK.TRK_black_monday_consumer_goods = TRK_black_monday_consumer_goods_change_actual tooltip = consumer_goods_factor_tooltip }
			}
			if = {
				limit = { NOT = { check_variable = { TRK_black_monday_construction_speed_change_actual = 0 } } }
				add_to_variable = { TRK.TRK_black_monday_construction_speed = TRK_black_monday_construction_speed_change_actual tooltip = production_speed_buildings_factor_tooltip }
			}
			if = {
				limit = { NOT = { check_variable = { TRK_black_monday_factory_output_change_actual = 0 } } }
				add_to_variable = { TRK.TRK_black_monday_factory_output = TRK_black_monday_factory_output_change_actual tooltip = industrial_capacity_factory_tooltip }
			}
			force_update_dynamic_modifier = yes
		}
	}
}

TRK_increase_gold = {
	if = {
		limit = {
			has_idea = TRK_syr_darya_gold_0
		}
		swap_ideas = { remove_idea = TRK_syr_darya_gold_0 add_idea = TRK_syr_darya_gold_1 }
	}
	else_if = {
		limit = {
			has_idea = TRK_syr_darya_gold_1
		}
		swap_ideas = { remove_idea = TRK_syr_darya_gold_1 add_idea = TRK_syr_darya_gold_2 }
	}
	else_if = {
		limit = {
			has_idea = TRK_syr_darya_gold_2
		}
		swap_ideas = { remove_idea = TRK_syr_darya_gold_2 add_idea = TRK_syr_darya_gold_3 }
	}
	else_if = {
		limit = {
			has_idea = TRK_syr_darya_gold_3
		}
		swap_ideas = { remove_idea = TRK_syr_darya_gold_3 add_idea = TRK_syr_darya_gold_4 }
	}
	else_if = {
		limit = {
			has_idea = TRK_syr_darya_gold_4
		}
		swap_ideas = { remove_idea = TRK_syr_darya_gold_4 add_idea = TRK_syr_darya_gold_5 }
	}
	else_if = {
		limit = {
			has_idea = TRK_syr_darya_gold_5
		}
		add_political_power = 5
	}
}
TRK_decrease_gold = {
	if = {
		limit = {
			has_idea = TRK_syr_darya_gold_0
		}
		add_political_power = -50
	}
	else_if = {
		limit = {
			has_idea = TRK_syr_darya_gold_1
		}
		swap_ideas = { remove_idea = TRK_syr_darya_gold_1 add_idea = TRK_syr_darya_gold_0 }
	}
	else_if = {
		limit = {
			has_idea = TRK_syr_darya_gold_2
		}
		swap_ideas = { remove_idea = TRK_syr_darya_gold_2 add_idea = TRK_syr_darya_gold_1 }
	}
	else_if = {
		limit = {
			has_idea = TRK_syr_darya_gold_3
		}
		swap_ideas = { remove_idea = TRK_syr_darya_gold_3 add_idea = TRK_syr_darya_gold_2 }
	}
	else_if = {
		limit = {
			has_idea = TRK_syr_darya_gold_4
		}
		swap_ideas = { remove_idea = TRK_syr_darya_gold_4 add_idea = TRK_syr_darya_gold_3 }
	}
	else_if = {
		limit = {
			has_idea = TRK_syr_darya_gold_5
		}
		swap_ideas = { remove_idea = TRK_syr_darya_gold_5 add_idea = TRK_syr_darya_gold_4 }
	}
}

TRK_continue_martial_law_delayed_effect = {
	effect_tooltip = { #causes infinite loop if used in on_remove
		swap_ideas = {
			remove_idea = TRK_continue_martial_law
			add_idea = TRK_normalised_military_control
		}
	}
	hidden_effect = { add_ideas = TRK_normalised_military_control }
}

TRK_language_unification_programme_reward = {
	if = {
		limit = { TRK_nazir_turyakululy = { is_political_advisor = yes } }
		add_ideas = TRK_jadid_education_reforms
	}
	else = {
		add_ideas = TRK_jadid_education_experiments
	}
}

TRK_language_unification_programme_after_effect = {
	custom_effect_tooltip = { localization_key = tooltip_after_days DAYS = 500 }
	effect_tooltip = { TRK_language_unification_programme_reward = yes }
}

TRK_delayed_research_slot_effect = {
	add_research_slot_until_four = yes
	add_ideas = TRK_madaminbek_uni
}

TRK_add_or_increase_cross_border_collaboration = {
	if = {
		limit = { has_idea = TRK_cross_border_collaboration }
		modify_timed_idea = {
			idea = TRK_cross_border_collaboration
			days = 50
		}
	}
	else = {
		add_timed_idea = {
			idea = TRK_cross_border_collaboration
			days = 30
		}
	}
}

TRK_attack_bukhara_effect = {
	declare_war_on = {
		target = BUK
		type = annex_everything
	}
	custom_effect_tooltip = tooltip_white_line
	if = {
		limit = { has_country_flag = TRK_full_buk_rout }
		732 = { #Samarkand
			add_core_of = ROOT
			transfer_state_to = ROOT
		}
	}
	else_if = {
		limit = {
			OR = {
				has_country_flag = TRK_strong_smk
				has_country_flag = TRK_moderate_smk
			}
		}
		set_province_controller = 10671
	}
	hidden_effect = {
		if = {
			limit = { has_template = "Samarkand Garrison" }
			delete_unit_template_and_units = { division_template = "Samarkand Garrison" disband = yes } #no cheating
		}
	}
	if = {
		limit = { has_country_flag = TRK_strong_smk }
		custom_override_tooltip = {
			division_template = {
				name = "Samarkand Garrison"
				division_names_group = CA_INF_01
				regiments = {
					irregular_infantry = { x = 0 y = 0 }
					irregular_infantry = { x = 0 y = 1 }
					irregular_infantry = { x = 0 y = 2 }
					irregular_infantry = { x = 0 y = 3 }
				}
			}
			tooltip = {
				localization_key = tooltip_create_division_template
				NAME = "Samarkand Garrison"
				LINE_1 = { localization_key = line_battalion_tt NAME = irregular_infantry ICON = GFX_unit_irregular_infantry_icon_small COUNT = 4 }
			}
		}
		732 = { #Samarkand
			custom_override_tooltip = {
				tooltip = {
					localization_key = tooltip_spawn_unit
					TYPE = "Samarkand Garrison"
				}
				create_unit = {
					division = "division_template = \"Samarkand Garrison\" start_experience_factor = 0.15"
					prioritize_location = 10671
					owner = ROOT
				}
			}
		}
	}
	else_if = {
		limit = { has_country_flag = TRK_moderate_smk }
		custom_override_tooltip = {
			division_template = {
				name = "Samarkand Garrison"
				division_names_group = CA_INF_01
				regiments = {
					irregular_infantry = { x = 0 y = 0 }
					irregular_infantry = { x = 0 y = 1 }
					irregular_infantry = { x = 0 y = 2 }
				}
			}
			tooltip = {
				localization_key = tooltip_create_division_template
				NAME = "Samarkand Garrison"
				LINE_1 = { localization_key = line_battalion_tt NAME = irregular_infantry ICON = GFX_unit_irregular_infantry_icon_small COUNT = 3 }
			}
		}
		732 = { #Samarkand
			custom_override_tooltip = {
				tooltip = {
					localization_key = tooltip_spawn_unit
					TYPE = "Samarkand Garrison"
				}
				create_unit = {
					division = "division_template = \"Samarkand Garrison\" start_experience_factor = 0.1"
					prioritize_location = 10671
					owner = ROOT
				}
			}
		}
	}
	else = {
		custom_override_tooltip = {
			division_template = {
				name = "Samarkand Garrison"
				division_names_group = CA_INF_01
				regiments = {
					irregular_infantry = { x = 0 y = 0 }
					irregular_infantry = { x = 0 y = 1 }
				}
			}
			tooltip = {
				localization_key = tooltip_create_division_template
				NAME = "Samarkand Garrison"
				LINE_1 = { localization_key = line_battalion_tt NAME = irregular_infantry ICON = GFX_unit_irregular_infantry_icon_small COUNT = 2 }
			}
		}
		capital_scope = {
			custom_override_tooltip = {
				tooltip = {
					localization_key = tooltip_spawn_unit
					TYPE = "Samarkand Garrison"
				}
				create_unit = {
					division = "division_template = \"Samarkand Garrison\" start_experience_factor = 0.1"
					prioritize_location = 1459
					owner = ROOT
				}
			}
		}
	}
	hidden_effect = {
		BUK = { country_event = central_asian_crisis_events.448 }
	}
}

TRK_create_fergana_peasant_army = {
	custom_effect_tooltip = TRK_monstrov_advisor_is_helpful_tooltip
	custom_override_tooltip = {
		tooltip = {
			localization_key = tooltip_create_division_template
			NAME = "Fergana Peasant Army"
			LINE_1 = { localization_key = line_battalion_tt NAME = irregular_infantry ICON = GFX_unit_irregular_infantry_icon_small COUNT = 6 }
		}
		if = {
			limit = { has_template = "Fergana Peasant Army" }
			delete_unit_template_and_units = { division_template = "Fergana Peasant Army" disband = yes } #no cheating
		}
		division_template = {
			name = "Fergana Peasant Army"
			division_names_group = CA_INF_01
			regiments = {
				irregular_infantry = { x = 0 y = 0 }
				irregular_infantry = { x = 0 y = 1 }
				irregular_infantry = { x = 0 y = 2 }
				irregular_infantry = { x = 1 y = 0 }
				irregular_infantry = { x = 1 y = 1 }
				irregular_infantry = { x = 1 y = 2 }
			}
		}
	}
	407 = { #Tashkent
		custom_override_tooltip = {
			tooltip = {
				localization_key = tooltip_spawn_unit
				TYPE = "Fergana Peasant Army"
			}
			create_unit = {
				division = "division_template = \"Fergana Peasant Army\" start_experience_factor = 0.15"
				prioritize_location = 1459
				owner = ROOT
			}
		}
	}
}

TRK_create_taskhent_garrison = {
	custom_effect_tooltip = TRK_osipov_advisor_is_helpful_tooltip
	custom_override_tooltip = {
		tooltip = {
			localization_key = tooltip_create_division_template
			NAME = "Tashkent Garrison"
			LINE_1 = { localization_key = line_battalion_tt NAME = irregular_infantry ICON = GFX_unit_irregular_infantry_icon_small COUNT = 4 }
		}
		if = {
			limit = { has_template = "Tashkent Garrison" }
			delete_unit_template_and_units = { division_template = "Tashkent Garrison" disband = yes } #no cheating
		}
		division_template = {
			name = "Tashkent Garrison"
			division_names_group = CA_INF_01
			regiments = {
				irregular_infantry = { x = 0 y = 0 }
				irregular_infantry = { x = 0 y = 1 }
				irregular_infantry = { x = 0 y = 2 }
				irregular_infantry = { x = 0 y = 3 }
			}
		}
	}
	407 = { #Tashkent
		custom_override_tooltip = {
			tooltip = {
				localization_key = tooltip_spawn_unit
				TYPE = "Tashkent Garrison"
			}
			create_unit = {
				division = "division_template = \"Tashkent Garrison\" start_experience_factor = 0.3"
				prioritize_location = 1459
				owner = ROOT
			}
		}
	}
}
